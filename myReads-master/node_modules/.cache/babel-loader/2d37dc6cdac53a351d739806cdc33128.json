{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\The Jhingy Father\\\\Downloads\\\\New folder (5)\\\\prio\\\\test\\\\taslema\\\\myReads-master\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport FitchBook from \"./components/Search\";\nimport BookList from \"./components/BookList\";\nimport * as BooksAPI from './BooksAPI';\nimport { Route, Routes } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [books, setBooks] = useState([]); // fitch for all books\n\n  useEffect(() => {\n    (async () => {\n      const res = await BooksAPI.getAll();\n      setBooks(res);\n    })();\n  }, []); // here we update the section state\n\n  const updateBookCategory = async (book, shelf) => {\n    await BooksAPI.update(book, shelf).then(() => {\n      book.shelf = shelf;\n      setBooks(books.filter(b => book.id !== b.id).concat(book));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      exact: true,\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(BookList, {\n        books: books,\n        updateBookCategory: updateBookCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/search\",\n      element: /*#__PURE__*/_jsxDEV(FitchBook, {\n        books: books,\n        updateBookCategory: updateBookCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ww1JAI05mMsgubm5EIyBKqdj5S0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/The Jhingy Father/Downloads/New folder (5)/prio/test/taslema/myReads-master/src/App.js"],"names":["useEffect","useState","FitchBook","BookList","BooksAPI","Route","Routes","App","books","setBooks","res","getAll","updateBookCategory","book","shelf","update","then","filter","b","id","concat"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,KAAKC,QAAZ,MAA0B,YAA1B;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,kBAA9B;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC,CADa,CAGb;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACX,YAAMU,GAAG,GAAG,MAAMN,QAAQ,CAACO,MAAT,EAAlB;AACAF,MAAAA,QAAQ,CAACC,GAAD,CAAR;AACH,KAHC;AAIA,GALK,EAKH,EALG,CAAT,CAJa,CAWb;;AACA,QAAME,kBAAkB,GAAG,OAAOC,IAAP,EAAaC,KAAb,KAAuB;AAClD,UAAMV,QAAQ,CAACW,MAAT,CAAgBF,IAAhB,EAAsBC,KAAtB,EAA6BE,IAA7B,CAAkC,MAAM;AAC5CH,MAAAA,IAAI,CAACC,KAAL,GAAaA,KAAb;AACAL,MAAAA,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAaC,CAAC,IAAIL,IAAI,CAACM,EAAL,KAAYD,CAAC,CAACC,EAAhC,EAAoCC,MAApC,CAA2CP,IAA3C,CAAD,CAAR;AACD,KAHK,CAAN;AAIC,GALD;;AAMA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AACA,MAAA,KAAK,MADL;AAEA,MAAA,IAAI,EAAC,GAFL;AAGA,MAAA,OAAO,eAAE,QAAC,QAAD;AAAU,QAAA,KAAK,EAAEL,KAAjB;AAAwB,QAAA,kBAAkB,EAAEI;AAA5C;AAAA;AAAA;AAAA;AAAA;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,KAAD;AACA,MAAA,IAAI,EAAC,SADL;AAEA,MAAA,OAAO,eACP,QAAC,SAAD;AAAW,QAAA,KAAK,EAAEJ,KAAlB;AAAyB,QAAA,kBAAkB,EAAEI;AAA7C;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA,YAPF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAlCQL,G;;KAAAA,G;AAoCT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport FitchBook from \"./components/Search\";\nimport BookList from \"./components/BookList\";\nimport * as BooksAPI from './BooksAPI';\nimport { Route, Routes } from \"react-router-dom\";\n\nfunction App() {\n  const [books, setBooks] = useState([]);\n\n  // fitch for all books\n  useEffect(() => {  \n      (async () => {\n        const res = await BooksAPI.getAll();\n        setBooks(res); \n    })()\n     }, [])\n\n  // here we update the section state\n  const updateBookCategory = async (book, shelf) => {\n  await BooksAPI.update(book, shelf).then(() => {\n    book.shelf = shelf\n    setBooks(books.filter(b => book.id !== b.id).concat(book))\n  })\n  } \n  return (\n    <Routes>\n      <Route \n      exact\n      path=\"/\"\n      element={<BookList books={books} updateBookCategory={updateBookCategory}\n      />}\n      />\n      <Route \n      path=\"/search\"\n      element={\n      <FitchBook books={books} updateBookCategory={updateBookCategory}\n      />}\n      />\n    </Routes>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}